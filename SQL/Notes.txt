--------------------------------Partitions-------------------

Partitions split a large table into smaller table splits by the 
partition key/column eg date. This allows for more efficient storage
and faster querying when filtering by partition e.g all data since date X

Good thing about partitions is that they dont affect the queryer (the partitions 
are taken care of by the database itself)

----------------------------------Indexing--------------------

Indexing provide quicker access to data through hash maps. 
Columns that are often used for filtering are usually indexed, 
since it provides quicker access to identify groups of data without having
to scan the whole table


--------------------------------Table Relations-------------------------

1. One-to-one Relationship
One row in one table corresponds to one row in another table, and one row in that other
table has to correspond to only one row in the original table

2. One-to-many Relationship
One row in one table corresponds to multiple rows in another table, and multiple rows 
in that other table can correspond to only one row  in the original table

3. Many-to-many Relationship
Multiple rows in one table can corresponds to one row in another table, and 
multiple rows in that other table can corresponds to one row in the original table


-----------------------------Data Types-------------------------------

They describe the type of data in each column. This provides consistency, performance, 
and validation.

1. Numerical data types 
    -> integer (4 bytes)
        - smallint (2 bytes), bigint (8 bytes)
    -> numeric - (var)
        - decimal
    -> real - (5 d.p)
        - double precision (15 d.p)
    -> serial (auto incr.)
        - smallserial, bigserial


2. Text data types
    -> text (variable)
    -> char(n), character(n)
    -> varchar(n), varying character(n)


3 Datetime data types
    -> timestamp
        -> timestamptz
    -> date 
    -> time (w, w/o tz)
    -> interval 


4. Additional data types
    -> boolean
    -> money
    -> bytea
    -> enumerated (custom -series of objects for ordering, eg in months)
    -> User defined


5. Extensions 
    -> JSON
    -> XML
    -> Array
    -> Text Search
    -> UUID
    -> Geometric (eg. points, box)
    -> Network (eg. inet, macaddr)